# OS specific configs
OS="`uname`"
case $OS in
  'Linux')
    export NOTES="/mnt/failai/Sync/Notes"
    export CLI="/mnt/failai/Sync/cli"
    export REPOS="/mnt/failai/Desktop/Repositories"

    alias vim='nvim'
    alias tocbd='wl-copy'
    alias fromcbd='wl-paste'
    ;;

  'Darwin')
    export NOTES="$HOME/Sync/Notes"
    export CLI="$HOME/Sync/cli"
    export REPOS="$HOME/repos"

    alias awsw='aws2-wrap'
    alias vim='nvim'
    alias tocbd='pbcopy'
    alias fromcbd='pbpaste'
    source ~/.work_config
    ;;

  *)
esac

# Editor for other commands
export EDIT="nvim"

# TODO: change shell config script to import zsh config as separate zsh config file
if [ ! -z ${ZSH_VERSION+x} ]; then
    # echo "this is zsh"
	# Share history across shells
	setopt SHARE_HISTORY

	# Ensure that history is appended immedaitely
	setopt INC_APPEND_HISTORY

	# History time format
	export HISTTIMEFORMAT="[%F %T] "

	# History size
	HISTFILE=~/.zsh_history
	HISTSIZE=1000000
	SAVEHIST=1000000

	# Adds timestamp to cmd history file
	setopt EXTENDED_HISTORY

	# Don't write duplicated cmds to history file.
	# etopt HIST_IGNORE_ALL_DUPS

	# Write cmd history as is, but when serching cmd in history, show cmds without duplicates
	setopt HIST_FIND_NO_DUPS

# elif [ ! -z ${BASH_VERSION+x} ]; then
    # echo "this is bash"
    # echo $BASH_SOURCE
# else
#    echo "not recognized!!!!"
fi

#Starts starship in default shell
eval "$(starship init $SHELL)"

# Use ripgrep when getting files with fzf
export FZF_DEFAULT_COMMAND='rg --files --ignore-vcs'

# Aliases
alias cn='print -z -- $(rg "" $CLI --no-filename | grep -v -e "^[[:space:]]*$" | fzf | grep -o "^[^#]*")'
alias ecn='(cd $CLI; $EDIT)'
alias cfg="(cd ~/.cfg; $EDIT)"
alias notes="(cd $NOTES/; $EDIT)"
alias wk="(cd Desktop/Work; $EDIT)"
alias todo="(cd $NOTES/TODO; $EDIT)"
alias bat='bat --paging=never'
alias rp='cd `find $REPOS -mindepth 1 -maxdepth 1 -type d | fzf`'

alias bat='bat --paging=never'
alias gs='git status'

# switch branch with fzf
gch() {
    git checkout $(git for-each-ref refs/heads/ --format='%(refname:short)' | fzf)
}

# fuzzy find git file differences
gd() {
  preview="git diff $@ --color=always -- {-1}"
  git diff $@ --name-only | fzf -m --ansi --preview $preview
}

# Format Json, print outptut & copy to clipboard.
# Required params:
#  1st -> raw Json string. Required
# Optional:
#  2nd -> desired indentation. 4 by default
fjson() {
    local indent=4
    if [[ "$2" =~ ^[0-9]+$ ]] then
       indent="$2"
    fi

    # jq --indent $i <<< $1 | tocbd && fromcbd | jq && echo '\nCopied to clipboard!'
    local fjson=$(echo "$1" | jq --indent $indent '.')
    echo "$fjson"| tocbd
    echo "$fjson"
    printf "\nCopied to clipboard!\n"
}

# Generates unique uuid
genuuid() {
    local cmd=$(uuidgen)

    # On Mac OS make uuid letters lowercase
    if [[ `uname` == Darwin ]] then
	    cmd=$(uuidgen | tr A-Z a-z)
    fi

    # echo -n "$cmd" | tocbd && fromcbd && echo '\nCopied to clipboard!'
    echo -n "$cmd" | tocbd
    echo "$cmd"
    printf "Copied to clipboard!\n"
}
